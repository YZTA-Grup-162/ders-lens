# Use Python 3.9 base image
FROM python:3.9

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgl1-mesa-glx \
    libglib2.0-0 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies directly
RUN pip install --no-cache-dir --upgrade pip

# Install core dependencies one by one to ensure they work
RUN pip install --no-cache-dir numpy==1.21.6
RUN pip install --no-cache-dir scipy==1.7.3
RUN pip install --no-cache-dir scikit-learn==1.0.2
RUN pip install --no-cache-dir joblib==1.3.2

# Install other dependencies
RUN pip install --no-cache-dir torch==2.0.1 torchvision==0.15.2
RUN pip install --no-cache-dir opencv-python-headless==4.8.1.78
RUN pip install --no-cache-dir Pillow==10.0.1
RUN pip install --no-cache-dir fastapi==0.104.1
RUN pip install --no-cache-dir uvicorn==0.24.0
RUN pip install --no-cache-dir python-multipart==0.0.6
RUN pip install --no-cache-dir matplotlib==3.9.4
RUN pip install --no-cache-dir onnx==1.15.0
RUN pip install --no-cache-dir onnxruntime==1.16.0

# Copy application code
COPY app.py .
COPY model_architecture_fix.py .

# Create model directory structure
RUN mkdir -p /app/models_fer2013 && \
    mkdir -p /app/models_daisee && \
    mkdir -p /app/models_mendeley && \
    mkdir -p /app/models_comprehensive_fixed && \
    mkdir -p /app/models_comprehensive_real

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Run the application
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8001"]
